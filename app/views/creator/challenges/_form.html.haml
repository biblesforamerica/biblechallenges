- if @challenge.errors.any?
  - flash[:error] = @challenge.errors.full_messages.to_sentence

.section.primary.centered
  .container
    .title
      = controller.action_name.capitalize
      = t 'chall'

%section.container
  .row
    .col-md-6.col-md-offset-3

      = form_for [:creator, @challenge], html: {class: 'form-horizontal'} do |f|
        .form-group
          = f.label :name, I18n.t('creator.challenges._form.challenge_name')
          = f.text_field :name, required: true, class: "form-control"
          %p.help-block
            = t 'creator.challenges._form.challenge_name_help' 
        .form-group
          = f.label :begindate, I18n.t('creator.challenges._form.begin_date')
          = f.text_field :begindate, value: f.object.begindate.try(:strftime,"%A, %-d %b, %Y"), required: true, class: "form-control", data: {behaviour: 'datepicker'}, id: 'challenge_begindate_input'
          %p.help-block
            = t 'creator.challenges._form.begin_date_help'

        .form-group
          = f.label :chapters_to_read, I18n.t('creator.challenges._form.chapters_to_read')
          = f.text_field :chapters_to_read, required: true, class: "form-control"
          %p.help-block 
            = t 'creator.challenges._form.chapters_help'

        .form-group
          = f.label :dates_to_skip, I18n.t('creator.challenges._form.dates_to_skip')
          = f.text_field :dates_to_skip, required: false, class: "form-control"
          %p.help-block
            = t 'creator.challenges._form.skip_dates_help'

        .form-group
          %h5.strong 
            = t "creator.challenges._form.skip_days_text"

          %br
          .col-sm-3
            = f.check_box :days_of_week_to_skip, {multiple: true}, '0', false
            &nbsp;
            = t 'creator.challenges._form.lordsday'

          .col-sm-3
            = f.check_box :days_of_week_to_skip, {multiple: true}, '1', false
            &nbsp;
            = t 'creator.challenges._form.monday'

          .col-sm-3
            = f.check_box :days_of_week_to_skip, {multiple: true}, '2', false
            &nbsp;
            = t 'creator.challenges._form.tuesday'

          .col-sm-3
            = f.check_box :days_of_week_to_skip, {multiple: true}, '3', false
            &nbsp;
            = t 'creator.challenges._form.wednesday'

          .col-sm-3
            = f.check_box :days_of_week_to_skip, {multiple: true}, '4', false
            &nbsp;
            = t 'creator.challenges._form.thursday'

          .col-sm-3
            = f.check_box :days_of_week_to_skip, {multiple: true}, '5', false
            &nbsp;
            = t 'creator.challenges._form.friday'

          .col-sm-3
            = f.check_box :days_of_week_to_skip, {multiple: true}, '6', false
            &nbsp;
            = t 'creator.challenges._form.saturday'

        %br
        %br

        .form-group
          = f.submit class: 'btn btn-primary btn-block', disable_with: I18n.t('creator.challenges._form.wait')
          = link_to "Delete this challenge", confirm_delete_creator_challenge_url(@challenge),class: "btn btn-danger btn-block" unless @challenge.new_record?


:javascript

  var $input = $('#challenge_begindate_input').pickadate({
    // Escape any “rule” characters with an exclamation mark (!).
    format: 'dddd, dd mmm, yyyy',
    formatSubmit: 'yyyy-mm-dd',
    min: true,
    clear: '',
    hiddenPrefix: 'date_format_',
    hiddenSuffix: 'data'
    //editable: true
  });
  
  // From pickadate.js docs:
  // An important thing to note here is that this [editable: true] disables
  // keyboard bindings on the input element, such as arrow keys opening the
  // picker. You will have to add your own bindings as you see fit.
  // 
  // This enables the date picker to pop up even when editable is set to
  // true.
  var picker = $input.pickadate('picker');
  $input.on({
    'focus': datepickerHandler,
    'click': datepickerHandler
  });

  function datepickerHandler () {
    if (picker.get('open')) {
      picker.close();
    } else {
      picker.open();
    }                        
    event.stopPropagation();
  };
